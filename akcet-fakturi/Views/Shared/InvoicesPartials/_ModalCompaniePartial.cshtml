@model akcetDB.Company

<!-- Modal to add Company-->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Добавяне на нова фирма</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("CreateCompanyAjax", "Home", null,
                        new AjaxOptions
                        {
                            OnSuccess = "getresultCompany",
                            HttpMethod = "POST"
                        }, new { @class = "form-horizontal", id = "form-company"}))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                        <div class="form-group">
                            @Html.Label("Адрес", new { @class = "control-label col-md-2"} )
                            <div class="col-md-7">
                                @Html.DropDownList("IdAddress", null, htmlAttributes: new {@class = "form-control  select2", style="width: 90%" })
                                @Html.ValidationMessageFor(model => model.IdAddress, "", new {@class = "text-danger"})
                            </div>
                            <div class="col-md-3 pull-left">
                                <button type="button" class="btn btn-info btn-sg" id="product-new" data-toggle="modal" data-target="#address-modal">
                                    <span class="glyphicon glyphicon-plus"> </span>
                                </button>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CompanyMol, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CompanyMol, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyMol, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CompanyBulsatat, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CompanyBulsatat, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyBulsatat, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CompanyDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CompanyDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CompanyPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CompanyPhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyPhone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IsPrimary, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsPrimary)
                                    @Html.ValidationMessageFor(model => model.IsPrimary, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Затвори</button>
                <button type="button" class="btn btn-primary" id="submitCompany" data-dismiss="modal">Запази</button>
            </div>
        </div>
    </div>
</div>





<script>
    $("#submitCompany")
    .click(function (event) {
        event.preventDefault();
        $("#form-company").submit();
    });

    function getresultCompany(data) {
        console.log(data);

        var mySelect = $('#company-name');
        mySelect.append(
            $('<option></option>').val(data.id).html(data.value));
    };
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
