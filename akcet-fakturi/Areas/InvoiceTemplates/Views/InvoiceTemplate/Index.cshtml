<html>
<head>
    @using System.Web.UI.WebControls.Expressions
    @using akcetDB
    @using Kendo.Mvc.UI
    @model akcet_fakturi.Areas.InvoiceTemplates.Models.InvoiceTemplateModels
    @{
        ViewBag.Title = "Invoices";
        Layout = null;
        ViewBag.Invoices = "active";
    }
    <link href="~/Content/invoicePrint.css" rel="stylesheet" />

</head>
<body>
    <div id="wrapper">
        <div id="user-company">
            <h1 class="pdf-headers">@Model.UserCompanyName</h1><br />
            <span>@Model.UserAddress</span>
            <br /><br />
            <span>Telefoon: @Model.UserPhone</span><br />
            <span>Bankrekening: @Model.UserBankAccount</span><br />
            <span>KvK-nummer: @Model.UserBulstat</span><br />
            <span>BTW-nummer: @Model.UserDDsNumber</span>
        </div>

        <table id="company-data">

            <tr>
                <td style="width: 900px"></td>
                <td>
                    @Model.CompanyName<br />@Model.CompanyAddress
                </td>
            </tr>
        </table>

        <div id="clear"></div>

        <h1 class="pdf-headers">FACTUUR</h1>

        <div id="invoice-info">
            <table style="width: 100%;">
                <tr>
                    <td style="width: 15%">
                        Factuurdatum:
                    </td>
                    <td width="45%">
                        @Model.InvoiceDate
                    </td>
                    <td rowspan="5" style="text-align: right">
                        <table style="border: 1px solid black;     display: inline-block;">
                            <tr>
                                <td class="pinki">Uw BTW-nummer</td>
                            </tr>
                            <tr>
                                <td class="pink">@Model.CompanyDDSNumber</td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td>
                        Factuurnummer:
                    </td>
                    <td>
                        @Model.InvoiceNumber
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        Vervaldatum:
                    </td>
                    <td>
                        @Model.InvoiceEndDate
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        Periode:
                    </td>
                    <td>
                        @Model.Period
                    </td>

                </tr>

            </table>



        </div>

        <div id="clear"></div>

        <table id="invoice-body">
            <tr class="th">
                <td>Omschrijving</td>
                <td>Project</td>
                <td>Aantal</td>
                <td>Prijs ex BTW</td>
                <td>BTW</td>
                <td>Bedrag ex BTW</td>
            </tr>


            @foreach (var Product in Model.ProductsListTemp)
            {
                <tr>
                    <td>@ProductName(Product.ProductID)</td>
                    <td>@ProjectName(Product.ProjectID)</td>
                    <td>
                        @Product.Quanity
                    </td>

                    <td>@Product.ProductPrice</td>
                    <td>
                        @DDSname(Product.DdsID)
                    </td>

                    <td>
                        @{
                            var totalProduct = Decimal.Parse(String.Format("{0}", Product.ProductPrice * Product.Quanity));
                        }
                        @($"{totalProduct:F2}")
                    </td>
                </tr>
                            }

        </table>
        <table class="totals">
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td>Totaal ex BTW: </td>
                <td></td>
                <td>@($"{Model.TotalWithoutDDS:F2}")</td>
            </tr>
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td>Totaal BTW: </td>
                <td></td>
                <td>@($"{Model.TotalDDS:F2}") </td>
            </tr>
            <tr class="total">
                <td></td>
                <td></td>
                <td></td>
                <td>Totaal factuur bedrag (EUR): </td>
                <td></td>
                <td>
                    @($"{Model.TotalWithDDS:F2}")
                </td>
            </tr>
        </table>
        <div>

            <table id="total-price">
                <tr class="pinki">
                    <td>BTW Details</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>

                </tr>


                <tr class="pink">
                    <td>BTW %</td>
                    <td></td>
                    <td>Subtotaal</td>
                    <td>BTW Bedrag</td>
                    <td>Bruto Bedlag</td>
                </tr>
                @{
                    Model.ListDds.OrderByDescending(s => s.Value).ThenBy(c => c.DdsName);

                }
                @foreach (var dds in Model.ListDds)
            {
                    <tr>
                        <td>@dds.DdsName</td>
                        <td></td>
                        <td>
                            @{
                                decimal subTotal = Decimal.Zero;
                                decimal btwBegdrad = Decimal.Zero;
                                decimal totalPerDiscount = Decimal.Zero;

                                foreach (var product in Model.ProductsListTemp)
                                {
                                    if (product.DdsID == dds.DdsID)
                                    {
                                        subTotal += Decimal.Parse(String.Format("{0}", product.ProductPrice * product.Quanity));
                                        btwBegdrad = Decimal.Parse(String.Format("{0}", subTotal * (GetValueDDS(product.DdsID)))) / 100;
                                        totalPerDiscount = subTotal + btwBegdrad;
                                    }
                                }
                            }
                            @if (subTotal != 0)
                            {
                                @($"{subTotal:F2}")
                            }
                        </td>

                        <td>
                            @if (btwBegdrad != 0 && !dds.IsNullValue)
                            {
                                @($"{btwBegdrad:F2}")
                            }
                        </td>
                        <td>
                            @if (totalPerDiscount != 0 && !dds.IsNullValue)
                            {
                                @($"{totalPerDiscount:F2}")
                            }
                            else if (totalPerDiscount != 0)
                            {
                                @($"{subTotal:F2}")
                            }
                        </td>
                    </tr>
                                }

            </table>
            <p>
                Wij verzoeken u vriendelijk de factuur binnen 14 dagen over te maken naar ons bankrekeningnummer IBAN @Model.UserBankAccount
            </p>
            @{
                string baseUrl = Request.Url.Scheme + "://" + Request.Url.Authority +
    Request.ApplicationPath.TrimEnd('/') + "/";
            }
            <p id="footer">
                Deze factuur is verzonden via @baseUrl
            </p>
        </div>
    </div>
</body>
</html>
@functions{
    private AkcetModel db = new AkcetModel();
    public string ProductName(int productId)
    {
        var productName = db.Products.FirstOrDefault(p => p.ProductID == productId).ProductName;

        return productName;
    }

    public string ProjectName(int projectId)
    {
        var productName = db.Projects.FirstOrDefault(p => p.ProjectID == projectId).ProjectName;

        return productName;
    }


    public string DDSname(int ddsId)
    {
        var ddsName = db.DDS.FirstOrDefault(m => m.DdsID == ddsId).DdsName;
        return ddsName;
    }

    public int DDSValue(int ddsId)
    {

        return 1;
    }


    private int GetValueDDS(int? ddsId)
    {
        var ddsValue = Int32.Parse(db.DDS.FirstOrDefault(m => m.DdsID == ddsId).Value);
        return ddsValue;
    }
}